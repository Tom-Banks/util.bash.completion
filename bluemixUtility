# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

__wlp_user_dir() {
  PRGDIR=`dirname "$SCRIPT"`
  WLP_HOME=`cd "$PRGDIR/.." && pwd`

  if [ -e "$WLP_HOME/java/java.env" ]
  then
    . "$WLP_HOME/java/java.env"
  fi

  if [ -e "$WLP_HOME/etc/default.env" ]
  then
    . "$WLP_HOME/etc/default.env"
  fi

  if [ -z "${WLP_USER_DIR}" ]
  then
    WLP_USER_DIR=${WLP_HOME}/usr
  fi
}

_getAllServers() {
  __wlp_user_dir
    
  servers=""
  if [ -e "$WLP_USER_DIR/servers" ]
  then
    server_dirs=`\ls $WLP_USER_DIR/servers`
    for dir in $server_dirs; do
      if [ -d $WLP_USER_DIR/servers/$dir ]; then 
        servers="$servers $dir"
      fi
    done
  fi

  echo $servers   
}

__bluemixUtility_servers() {
  all_servers=`_getAllServers`
  COMPREPLY=( $(compgen -W "${all_servers}" -- ${cur}) )
}

__bluemixUtility_avail_configurations() {
  __wlp_user_dir
    
  services=""
  if [ -e "$WLP_USER_DIR/shared/config/services" ]
  then
    server_dirs=`\ls $WLP_USER_DIR/shared/config/services`
    for dir in $server_dirs; do
      if [ -e $WLP_USER_DIR/shared/config/services/$dir/service.xml ]; then 
        services="$services $dir"
      fi
    done
  fi

  COMPREPLY=( $(compgen -W "${services}" -- ${cur}) )
}

__bluemixUtility_imported_configurations() {
  __wlp_user_dir
    
  server_name=$1

  imports=""
  if [ -e "$WLP_USER_DIR/servers/${server_name}/configDropins/defaults" ]
  then
    server_dirs=`\ls $WLP_USER_DIR/servers/${server_name}/configDropins/defaults`
    for dir in $server_dirs; do
       name="${dir%.*}"
       imports="$imports $name"
    done
  fi

  COMPREPLY=( $(compgen -W "${imports}" -- ${cur}) )
}

_bluemixUtility_unbind() {
	case "$cur" in
		*)
			local counter="2"
			if [ $cword -eq $counter ]; then
                __bluemixUtility_servers
			elif [ $cword -eq $(($counter + 1)) ]; then
                server_name="${words[$counter]}"
				__bluemixUtility_imported_configurations "$server_name"
		   	fi
			;;
	esac
}

_bluemixUtility_bind() {
	case "$cur" in
		*)
			local counter="2"
			if [ $cword -eq $counter ]; then
                __bluemixUtility_servers
			elif [ $cword -eq $(($counter + 1)) ]; then
				__bluemixUtility_avail_configurations
		   	fi
			;;
	esac
}

_bluemixUtility_help() {
	case "$cur" in
		*)
        opts="login switch marketplace createService listServices showService bind import listImports unbind deleteService logout info help"
        COMPREPLY=( $(compgen -W "${opts}" -- ${cur}) )
        ;;
	esac
}

_bluemixUtility() {

	COMPREPLY=()
	local cur prev words cword
	_get_comp_words_by_ref -n : cur prev words cword

    SCRIPT=$1

    command="help"
    local counter=1
	while [ $counter -lt $cword ]; do
    	case "${words[$counter]}" in
            *)
				command="${words[$counter]}"
				command_pos=$counter
				break
				;;
        esac
        (( counter++ ))
    done

	local completions_func=_bluemixUtility_${command}
	declare -F $completions_func >/dev/null && $completions_func

    return 0
}

complete -F _bluemixUtility bluemixUtility
